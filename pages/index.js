import Head from 'next/head';
import Image from 'next/image';
import Banner from '../components/banner';
import Card from '../components/card';
import styles from '../styles/Home.module.css';
import { fetchCoffeeStores } from '../lib/coffee-stores';
import useTrackLocation from '../hooks/use-track-location';
import { useEffect, useState, useContext } from 'react';
import { ACTION_TYPES, StoreContext } from '../store/store-context';

export async function getStaticProps(context) {
  console.log("hi getStaticProps");

  const coffeeStores = await fetchCoffeeStores();

  return {
    props: {
      coffeeStores
    },
  };
}

export default function Home(props) {
  const { coffeeStores } = props;
  const { handleTrackLocation, locationErrorMsg, isFindingLocation } = useTrackLocation();
  const [ coffeeStoresError, setCoffeeStoresError ] = useState(null);
  const { dispatch, state } = useContext(StoreContext);
  const { coffeeStores: returnedCoffeeStores, latLong} = state;


  const handleOnBannerBtnClick = () => {
    console.log("clicked.");
    handleTrackLocation();
  }

  useEffect(() => {
    async function setCoffeeStoresByLocation() {
      if (latLong) {
        try {
          const response = await fetch(`/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=18`);

          const coffeeStores = await response.json()
          //setReturnedCoffeeStores(fetchedCoffeeStores);
          dispatch({
            type: ACTION_TYPES.SET_COFFEE_STORES,
            payload: { coffeeStores }
          });

          setCoffeeStoresError("");

          //set coffee stores
        } catch (error) {
          //set error
          setCoffeeStoresError(error.message)
        }
      }
    }
    setCoffeeStoresByLocation();
  }, [latLong]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        <Banner
        buttonText={isFindingLocation ? "Loading..." : "View Stores Nearby"}
        handleOnClick={handleOnBannerBtnClick}
        />

        {locationErrorMsg ? `Somwthing went wrong: ${locationErrorMsg}` : ""}
        {coffeeStoresError ? `Somwthing went wrong: ${coffeeStoresError}` : ""}

        <div className={styles.heroImage}>
        <Image src="/static/hero-image.png" width={700} height={400} />
        </div>
      <div className={styles.sectionWrapper}>
        { returnedCoffeeStores.length > 0 && (
          <>
          <h2 className={styles.heading2}>Stores Near Me</h2>
        <div className={styles.cardLayout}>
          {returnedCoffeeStores.map(coffeeStore => (
          <Card
          key={coffeeStore.id}
          name={coffeeStore.name}
          imgUrl={coffeeStore.imgUrl || "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"}
          href={`/coffee-store/${coffeeStore.id}`}
          className={styles.card}
        />
        ))}
        </div>
        </>
        )
        }
      </div>
      <div className={styles.sectionWrapper}>
        { coffeeStores.length > 0 && (
          <>
          <h2 className={styles.heading2}>Dublin Stores</h2>
        <div className={styles.cardLayout}>
          {coffeeStores.map(coffeeStore => (
          <Card
          key={coffeeStore.id}
          name={coffeeStore.name}
          imgUrl={coffeeStore.imgUrl || "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"}
          href={`/coffee-store/${coffeeStore.id}`}
          className={styles.card}
        />
        ))}
        </div>
        </>
        )
        }
      </div>
      </main>
    </div>
  )
}
